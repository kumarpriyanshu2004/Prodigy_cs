# -*- coding: utf-8 -*-
"""prodigy_CS_01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XhrRCGvnnOFG7jNFqwUbwzscfzCHlgdj
"""

def encrypt_caesar_cipher(text, shift):
    encrypted_text = ""
    for char in text:
        if char.isalpha():
            shift_amount = shift % 26
            if char.islower():
                shifted = ord(char) + shift_amount
                if shifted > ord('z'):
                    shifted -= 26
                encrypted_text += chr(shifted)
            elif char.isupper():
                shifted = ord(char) + shift_amount
                if shifted > ord('Z'):
                    shifted -= 26
                encrypted_text += chr(shifted)
        else:
            encrypted_text += char
    return encrypted_text

def decrypt_caesar_cipher(text, shift):
    decrypted_text = ""
    for char in text:
        if char.isalpha():
            shift_amount = shift % 26
            if char.islower():
                shifted = ord(char) - shift_amount
                if shifted < ord('a'):
                    shifted += 26
                decrypted_text += chr(shifted)
            elif char.isupper():
                shifted = ord(char) - shift_amount
                if shifted < ord('A'):
                    shifted += 26
                decrypted_text += chr(shifted)
        else:
            decrypted_text += char
    return decrypted_text

def main():
    while True:
        choice = input("Would you like to (e)ncrypt or (d)ecrypt a message? (e/d): ").lower()
        if choice in ['e', 'd']:
            message = input("Enter the message: ")
            shift = int(input("Enter the shift value: "))
            if choice == 'e':
                encrypted_message = encrypt_caesar_cipher(message, shift)
                print(f"Encrypted message: {encrypted_message}")
            else:
                decrypted_message = decrypt_caesar_cipher(message, shift)
                print(f"Decrypted message: {decrypted_message}")
        else:
            print("Invalid choice. Please enter 'e' for encryption or 'd' for decryption.")
        continue_choice = input("Would you like to process another message? (y/n): ").lower()
        if continue_choice != 'y':
            break

if __name__ == "__main__":
    main()